[
{ 
  "query": "!date{\\d{4}-\\d{2}-\\d{2}}T!time{\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?}!timezone{(Z|[+\\-]\\d{2}:\\d{2})}",
  "doc": "2024-03-21T13:45:30.500Z\\n2023-01-01T00:00:00Z\\n2025-12-10T08:30:45.250+05:30\\n2022-10-15T18:20:00+02:00\\n2027-06-30T23:59:60.750Z\\n2030-06-30T23:59:60Z\\n2026-11-05T00:00:00Z\\n2028-08-20T00:00:00-07:00\\n2035-04-01T12:30:00Z\\n2019-07-07T07:15:30+08:00\\n",
  "isMultiRegex": false,
  "title": "[Log files] RFC3339 DateTime",
  "description": "Capture the parts of dates in RFC3339 DateTime format. Does not validates the data."
},
{ 
  "query": "!key{\"\\w+\"}\\s*:\\s*!value{\"(([^\"\\\\]|\\\\.)* )?!noun{[A-Z][A-Za-z]*}(\\.|\"|\\s([^\"\\\\]|\\\\.)*\")}",
  "doc": "{\\n  \"glossary\": {\\n    \"title\": \"Example Glossary\"\\n  }\\n}",
  "isMultiRegex": false,
  "title": "[JSON] Nouns inside key-value pairs",
  "description": "Extract all key-value pairs where the value is a string and has a noun."
},
{
  "query": "^!line{!word{[^\\s]+}( !word{[^\\s]+})+}(\\n+!line{!word{[^\\s]+}( !word{[^\\s]+})+})*$(\\n|$)",
  "doc": "Puro, Chile, es tu cielo azulado,\\npuras brisas te cruzan también,\\ny tu campo de flores bordado\\nes la copia feliz del Edén.\\nMajestuosa es la blanca montaña\\nque te dio por baluarte el Señor,\\nque te dio por baluarte el Señor,\\nY ese mar que tranquilo te baña\\nte promete futuro esplendor.\\nY ese mar que tranquilo te baña\\nte promete futuro esplendor.\\n\\nDulce Patria, recibe los votos\\nCon que Chile en tus aras juró\\nQue o la tumba serás de los libres\\nO el asilo contra la opresión\\nQue o la tumba serás de los libres\\nO el asilo contra la opresión\\nQue o la tumba serás de los libres\\nO el asilo contra la opresión.\\nO el asilo contra la opresión.\\nO el asilo contra la opresión.",
  "isMultiRegex": true,
  "title": "[Miscellaneous] Chile's national anthem",
  "description": "Match the lines and their words of the national anthem of Chile."
},
{
  "query": "(^|\\.)!sentence{[^.]*!noun{[A-Z][a-z]*}( [^.]*)?\\.}",
  "doc": "You don't know about me without you have read a book by the name of The Adventures of Tom Sawyer but that ain't no matter. That book was made by Mr Mark Twain and he told the truth, mainly. There was things which he stretched, but mainly he told the truth. That is nothing. I never seen anybody but lied one time or another, without it was Aunt Polly or the widow, or maybe Mary. Aunt Polly-Tom's Aunt Polly, she is-and Mary, and the Widow Douglas is all told about in that book, which is mostly a true book, with some stretchers, as I said before.",
  "title": "[Literature] Proper nouns in sentences",
  "isMultiRegex": false,
  "description": "Extract each proper noun, together with the sentence in which it appears."
},
{
  "query": "(^|\\.)!sentence{[^.]*!noun1{[A-Z][a-z]*} [^.]*!noun2{[A-Z][a-z]*}( [^.]*)?\\.}",
  "doc": "You don't know about me without you have read a book by the name of The Adventures of Tom Sawyer but that ain't no matter. That book was made by Mr Mark Twain and he told the truth, mainly. There was things which he stretched, but mainly he told the truth. That is nothing. I never seen anybody but lied one time or another, without it was Aunt Polly or the widow, or maybe Mary. Aunt Polly-Tom's Aunt Polly, she is-and Mary, and the Widow Douglas is all told about in that book, which is mostly a true book, with some stretchers, as I said before.",
  "title": "[Literature] Pair of proper nouns in sentences",
  "isMultiRegex": false,
  "description": "Extract each pair of proper nouns, together with the sentence in which they appear."
},
{
  "query": "(^| )!words{(\\w|[\\-'])+}( !words{(\\w|[\\-'])+}){K}([ ,.])",
  "doc": "You don't know about me without you have read a book by the name of The Adventures of Tom Sawyer but that ain't no matter. That book was made by Mr Mark Twain and he told the truth, mainly. There was things which he stretched, but mainly he told the truth. That is nothing. I never seen anybody but lied one time or another, without it was Aunt Polly or the widow, or maybe Mary. Aunt Polly-Tom's Aunt Polly, she is-and Mary, and the Widow Douglas is all told about in that book, which is mostly a true book, with some stretchers, as I said before.",
  "title": "[Literature] All k-grams",
  "isMultiRegex": true,
  "description": "Extract all the k-grams from the text (replace the parameter K with a number)."
},
{
  "query": "(^| )!words{(\\w|[\\-'])+} !words{(\\w|[\\-'])+}([ ,.])",
  "doc": "You don't know about me without you have read a book by the name of The Adventures of Tom Sawyer but that ain't no matter. That book was made by Mr Mark Twain and he told the truth, mainly. There was things which he stretched, but mainly he told the truth. That is nothing. I never seen anybody but lied one time or another, without it was Aunt Polly or the widow, or maybe Mary. Aunt Polly-Tom's Aunt Polly, she is-and Mary, and the Widow Douglas is all told about in that book, which is mostly a true book, with some stretchers, as I said before.",
  "title": "[Literature] All 2-grams",
  "isMultiRegex": true,
  "description": "Extract all the 2-grams from the text."
},
{
  "query": "(^| )!word{(\\w|[\\-'])+}([ ,.])",
  "doc": "You don't know about me without you have read a book by the name of The Adventures of Tom Sawyer but that ain't no matter. That book was made by Mr Mark Twain and he told the truth, mainly. There was things which he stretched, but mainly he told the truth. That is nothing. I never seen anybody but lied one time or another, without it was Aunt Polly or the widow, or maybe Mary. Aunt Polly-Tom's Aunt Polly, she is-and Mary, and the Widow Douglas is all told about in that book, which is mostly a true book, with some stretchers, as I said before.",
  "title": "[Literature] Get all words",
  "isMultiRegex": false,
  "description": "Extract all the words from the text."
},
{
  "query": "(\\n)!line{[^\"\\n]*!text{\"[^\"]+\"}([^\"\\n]*!text{\"[^\"]+\"})*[^\"\\n]*}(\\n|$)",
  "doc": "\"LatD\", \"LatM\", \"LatS\", \"NS\", \"LonD\", \"LonM\", \"LonS\", \"EW\", \"City\", \"State\"\\n41,    5,   59, \"N\",     80,   39,    0, \"W\", \"Youngstown\", OH\\n42,   52,   48, \"N\",     97,   23,   23, \"W\", \"Yankton\", SD\\n46,   35,   59, \"N\",    120,   30,   36, \"W\", \"Yakima\", WA\\n42,   16,   12, \"N\",     71,   48,    0, \"W\", \"Worcester\", MA\\n43,   37,   48, \"N\",     89,   46,   11, \"W\", \"Wisconsin Dells\", WI\\n36,    5,   59, \"N\",     80,   15,    0, \"W\", \"Winston-Salem\", NC\\n49,   52,   48, \"N\",     97,    9,    0, \"W\", \"Winnipeg\", MB\\n39,   11,   23, \"N\",     78,    9,   36, \"W\", \"Winchester\", VA\\n34,   14,   24, \"N\",     77,   55,   11, \"W\", \"Wilmington\", NC\\n39,   45,    0, \"N\",     75,   33,    0, \"W\", \"Wilmington\", DE\\n48,    9,    0, \"N\",    103,   37,   12, \"W\", \"Williston\", ND\\n41,   15,    0, \"N\",     77,    0,    0, \"W\", \"Williamsport\", PA\\n37,   40,   48, \"N\",     82,   16,   47, \"W\", \"Williamson\", WV\\n33,   54,    0, \"N\",     98,   29,   23, \"W\", \"Wichita Falls\", TX\\n37,   41,   23, \"N\",     97,   20,   23, \"W\", \"Wichita\", KS",
  "title": "[CSV] String fields and lines",
  "isMultiRegex": true,
  "description": "Extract all strings fields of each line."
},
{
  "query": "(\\n)!line{ *!field{\\S[^,\\n]*}(, *!field{\\S[^,\\n]*})*}(\\n|$)",
  "doc": "\"LatD\", \"LatM\", \"LatS\", \"NS\", \"LonD\", \"LonM\", \"LonS\", \"EW\", \"City\", \"State\"\\n41,    5,   59, \"N\",     80,   39,    0, \"W\", \"Youngstown\", OH\\n42,   52,   48, \"N\",     97,   23,   23, \"W\", \"Yankton\", SD\\n46,   35,   59, \"N\",    120,   30,   36, \"W\", \"Yakima\", WA\\n42,   16,   12, \"N\",     71,   48,    0, \"W\", \"Worcester\", MA\\n43,   37,   48, \"N\",     89,   46,   11, \"W\", \"Wisconsin Dells\", WI\\n36,    5,   59, \"N\",     80,   15,    0, \"W\", \"Winston-Salem\", NC\\n49,   52,   48, \"N\",     97,    9,    0, \"W\", \"Winnipeg\", MB\\n39,   11,   23, \"N\",     78,    9,   36, \"W\", \"Winchester\", VA\\n34,   14,   24, \"N\",     77,   55,   11, \"W\", \"Wilmington\", NC\\n39,   45,    0, \"N\",     75,   33,    0, \"W\", \"Wilmington\", DE\\n48,    9,    0, \"N\",    103,   37,   12, \"W\", \"Williston\", ND\\n41,   15,    0, \"N\",     77,    0,    0, \"W\", \"Williamsport\", PA\\n37,   40,   48, \"N\",     82,   16,   47, \"W\", \"Williamson\", WV\\n33,   54,    0, \"N\",     98,   29,   23, \"W\", \"Wichita Falls\", TX\\n37,   41,   23, \"N\",     97,   20,   23, \"W\", \"Wichita\", KS",
  "title": "[CSV] Fields without spaces and line",
  "isMultiRegex": true,
  "description": "Extract all fields of each line without the aligning spaces."
},
{
  "query": "!motif{G[^EDRKHPFYW].{2}[STAGCN][^P]}",
  "doc": ">XP_024849117.1 mitogen-activated protein kinase 10 isoform X5 [Bos taurus]\\nMSKSKVDNQFYSVEVGDSTFTVLKRYQNLKPIGSGAQGIVCAAYDAVLDRNVAIKKLSRPFQNQTHAKRAYRELVLMKCVNHKNIISLLNVFTPQKTLEEFQDVYLVMELMDANLCQVIQMELDHERMSYLLYQMLCGIKHLHSAGIIHRDLKPSNIVVKSDCTLKILDFGLARTAGTSFMMTPYVVTRYYRAPEVILGMGYKENVDIWSVGCIMGEMVRHKILFPGRDYIDQWNKVIEQLGTPCPEFMKKLQPTVRNYVENRPKYAGLTFPKLFPDSLFPADSEHNKLKASQARDLLSKMLVIDPAKRISVDDALQHPYINVWYDPAEVEAPPPQIYDKQLDEREHTIEEWKELIYKEVMNSEEKTKNGVVKGQPSPSAQVQP",
  "title": "[DNA] Motif search of a MAP kinase signature",
  "isMultiRegex": false,
  "description": "A motif search for a MAP kinase signature."
},
{
  "query": "!motif{G[^EDRKHPFYW].{2}[STAGCN][^P]}",
  "doc": ">XP_017210497.1 glutamate [NMDA] receptor subunit epsilon-2 isoform X1 [Danio rerio]\\nMGVGLAMFKGLYLHSSAMLVSLHLSSSPFSDCRVLSFVSLVSSFKLPLYISLLLLSLFFFPTCESRRGGGIGTPTGGMNSQSIISPPHYPPPGVSPVGPPMSPKFAQGLSIAVILVGNSSEVSLSEGLEKEDFLHVPLPPKVELVTMNETDPKSIINRICALMSRNWLQGVVFGDDTDQEAIAQILDFISAQTHIPILGIRGGSSMIMAAKDDHSMFFQFGPSIEQQASVMLNIMEEYDWYIFSIVTTYYPGHQDFVNRIRSTVDNSFVGWELEEVLLLDMSVDDGDSKIQNQMKKLQSPVILLYCTKEEATTIFEVAHSVGLTGYGYTWIVPSLVAGDTDNVPNVFPTGLISVSYDEWDYGLEARVRDAVAIIAMATSTMMLDRGPHTLLKSGCHGAPDKKGSKSGNPNEVLRYLMNVTFEGRNLSFSEDGFQMHPKLVIILLNKERQYERVGKWENGSLAMKYHVWPRFELYSDAEEREDDHLSIVTLEEAPFVIVEDVDPLSGTCMRNTVPCRKQLKLQNLTGDSGIYIKRCCKGFCIDILKKIAKSVKFTYDLYLVTNGKHGKKINGTWNGMVGEVVLKNAHMAVGSLTINEERSEVIDFSVPFIETGISVMVSRSNGTVSPSAFLEPFSADVWVMMFVMLLIVSAVAVFVFEYFSPVGYNRCLADGREPGGPSFTIGKAIWLLWGLVFNNSVPVQNPKGTTSKIMVSVWAFFAVIFLASYTANLAAFMIQEEYVDQVTGLSDKKFQHPNDFSPPFRFGTVPNGSTERNIRNNYKEMHSYMTSFHQKNVNEALHSLKSGKLDAFIYDAAVLNYMAGRDEGCKLVTIGSGYIFATTGYGIAIQKDSGWKRAVDLAILQLFGDGEMEELEALWLTGICHNEKNEVMSSQLDVDNMAGVFYMLGAAMALSLITFIAEHLFYWQLRFCFMGVCSGKPGMTFSISRGIYSCIHGVQIEENKSALNSPSATMKMNMNNTHSNILRLLRTAKNMTSVPGVNGSPHSALDYSHRESAVYDISEHRRSLAGHSDCKPPPYLPEDNMFSDYVSEVERTFGNLHLKDSNLYQDHYLHHHGGSELALGMSGPLPNRPRSLGSASSLEGGYDCDSLGGGVAPIFTTQPRQSLTHRNREKFDLIAGHPTQSSFKSGLPDLYGKFSFKGGASSSGFIAGHDRYCGGGGVGSGGDDGNIRSDVSDISTHTVTYGNLEGHSKRRKQYRDSLKKRPASAKSRREQDEIELGFRRRPHHTIHHHHHHHPATQAHRSATPPVERKSQRGGNCTSYLFRDKENLRDFYVDQFRAKEGASPWDLDLSDAPGMGGGVGLGGGSCGGVVSSGGAGGACTSLVPMEDFLKGKSKKTECKGGMGGGSPGQQGHACWEKGIGGVGGLAGGDWECRSCHSGGVGSGGSKPVCMHGGGGAGGYPAAGGVGGSSGGSGQISSRPSSATCKRCDSCKKPGNLYDISEDNLLLDQIAGKHPLESGKGGGGTGAQTQVQRRKFGPGGKVLRRQHSYDTFVELQKEGAGRMGGFGGGGGASMLPPPRSVSLKDKDRYMEGASPYAQMFEQYAGGERETSYFGDRGKGGGSSFSLFRGGEGGLHRRSVGERDMRDRDRGMMGGGVGGTRGVGTYSLSKSLYPDKVNQNPFIPTFGDDQCLLHGAKSYYIKKQQAQPQQQQTPQQQQQQLLNNSRADFRGSMGVTSYLPASATSGVLSNVAPRFPKELCLGGPLGNHHGGGPSNNKLLSARDGLGMGQGQRPFNGSSNGHVYEKLSSIESDV", 
  "title": "[DNA] Motif search in zebrafish",
  "isMultiRegex": false,
  "description": "N-myristoylation site motif inside a sequence of a glutamate [NMDA] receptor subunit epsilon-2 isoform X1 protein of zebrafish."
}
]
